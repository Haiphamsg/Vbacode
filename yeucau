Tại báo cáo KT06-Bao cao tong hop kiem tra cua QLRR:
Lấy số liệu tại dòng báo cáo 5. NV04.Danh sách khoản vay đảm bảo bằng cổ phiếu. Trong đó:
- Bước 1: Tại cột COLLATERAL_TYPE_DESCRIPTION: lọc chọn <<Cổ phiếu do các Doanh nghiệp khác phát hành được niêm yết trên SGD chứng khoán>>
- Bước 2: Tạo cột mới gồm: Giá cũ| Mã cổ phiếu| Số lượng CP| Tỷ lệ % cho vay | Dư nợ theo tài sản| Giá trị tài sản hiện tại| LTV hiện tại| Chênh lệch LTV.
- Bước 3: Cột (Giá cũ)(=) Giá trị tại Cột W (INIT_VALUE)/Giá trị tại Cột AB (Số lượng CP).
- Bước 4: Cột (Mã cổ phiếu) = Dò tìm theo Mã tài sản tại cột COLLATERAL_CODE với Báo cáo CL31.HM-LM002-Sao ke chi tiet khach hang co tai san bao dam-ALL, lấy dữ liệu tại cột Mã CK.
- Bước 5: Cột (Số lượng CP): Dò tìm theo Mã tài sản tại cột COLLATERAL_CODE với Báo cáo CL31.HM-LM002-Sao ke chi tiet khach hang co tai san bao dam-ALL, lấy số lượng cổ phiếu tại cột Số lượng chứng khoán.
- Bước 6: Cột (Tỷ lệ % cho vay):  Dò tìm theo Mã tài sản tại cột COLLATERAL_CODE với Báo cáo CL31.HM-LM002-Sao ke chi tiet khach hang co tai san bao dam-ALL, lấy số liệu (Tỷ lệ % cho vay) tại cột % CHO VAY.
- Bước 7: Xác định cột (Dư nợ theo tài sản): Xuất báo cáo CL32 - Sao kê chi tiết tài sản khế ước nhận nợ_new
   #Tính tổng dư nợ khế ước nhận nợ cho cho mỗi tài khoản vay
        DUNO_KUNN = SUM OF OUTSTANDING_LCY each ACCOUNT_NUMBER
   #Tính tổng giá trị đảm bảo cho khế ước cho mỗi tài khoản vay
        TSBD_KUNN = SUM OF GIA_TRI_DAM_BAO_DINH_GIA each ACCOUNT_NUMBER   
   #Tính quy đổi tổng dư nợ trên mỗi KUNN sang dư nợ trên mỗi TSBĐ
        SUM_DUNO_MATSBD = [DUNO_KUNN]/[TSBD_KUNN]*[GIA_TRI_DAM_BAO_DINH_GIA]
        MATCHING SUM_DUMNO_MATSBD (DƯ NỢ THEO MÃ TSBD) -> COLLATERAL_CODE
   **Lưu ý: Đối với các trường hợp TSBD_KUNN = 0 thì SUM_DUNO_MATSBD nhận giá trị bằng 0.
- Bước 8: Xác định cột (Giá trị tài sản hiện tại) (=) (số lượng CP) (x) Giá tham chiếu cổ phiếu tại ngày báo cáo. Trong đó, Giá tham chiếu cổ phiếu tại ngày báo cáo: Lấy từ trang điện tử sàn giao dịch chứng khoán. (Lấy tự động thông qua python và API của trang sàn giao dịch chứng khoán).
- Bước 9: Cột (LTV hiện tại): (=) (Dư nợ cho vay theo tài sản)/(Giá trị tài sản hiện tại)
- Bước 10: Cột (Chênh lệch LTV) = (Tỷ lệ % cho vay) - (LTV hiện tại).
- Bước 11: Lọc chọn Cột (Chênh lệch LTV) < 0
Sub ProcessStockCollateralReports()
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    Dim kt06Wb As Workbook
    Dim cl31Wb As Workbook
    Dim cl32Wb As Workbook
    Dim resultSheet As Worksheet
    Dim lastRow As Long
    Dim i As Long
    
    ' Open required workbooks
    Set kt06Wb = Workbooks.Open("path_to_KT06_report.xlsx")
    Set cl31Wb = Workbooks.Open("path_to_CL31_report.xlsx")
    Set cl32Wb = Workbooks.Open("path_to_CL32_report.xlsx")
    
    ' Create result worksheet in active workbook
    Set resultSheet = ThisWorkbook.Sheets.Add
    resultSheet.Name = "Stock_Analysis_" & Format(Date, "yyyymmdd")
    
    ' Set up headers
    With resultSheet
        .Cells(1, 1).Value = "COLLATERAL_CODE"
        .Cells(1, 2).Value = "Giá cũ"
        .Cells(1, 3).Value = "Mã cổ phiếu"
        .Cells(1, 4).Value = "Số lượng CP"
        .Cells(1, 5).Value = "Tỷ lệ % cho vay"
        .Cells(1, 6).Value = "Dư nợ theo tài sản"
        .Cells(1, 7).Value = "Giá trị tài sản hiện tại"
        .Cells(1, 8).Value = "LTV hiện tại"
        .Cells(1, 9).Value = "Chênh lệch LTV"
    End With
    
    ' Filter and process KT06 data
    With kt06Wb.Sheets(1)
        lastRow = .Cells(.Rows.Count, "A").End(xlUp).Row
        
        ' Filter for stock collateral
        .Range("A1:Z" & lastRow).AutoFilter Field:=FindColumnByHeader(kt06Wb.Sheets(1), "COLLATERAL_TYPE_DESCRIPTION"), _
            Criteria1:="Cổ phiếu do các Doanh nghiệp khác phát hành được niêm yết trên SGD chứng khoán"
            
        ' Process each row
        For i = 2 To lastRow
            If Not .Rows(i).Hidden Then
                ProcessStockRow i, resultSheet, cl31Wb, cl32Wb
            End If
        Next i
        
        ' Remove filter
        .AutoFilterMode = False
    End With
    
    ' Calculate additional metrics
    CalculateMetrics resultSheet
    
    ' Filter results where Chênh lệch LTV < 0
    FilterNegativeLTV resultSheet
    
    ' Clean up
    kt06Wb.Close SaveChanges:=False
    cl31Wb.Close SaveChanges:=False
    cl32Wb.Close SaveChanges:=False
    
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    
    MsgBox "Analysis completed!", vbInformation
End Sub

Private Sub ProcessStockRow(rowNum As Long, resultSheet As Worksheet, cl31Wb As Workbook, cl32Wb As Workbook)
    Dim collateralCode As String
    Dim initValue As Double
    Dim stockQty As Double
    
    With resultSheet
        ' Get collateral code
        collateralCode = Cells(rowNum, FindColumnByHeader(ActiveSheet, "COLLATERAL_CODE")).Value
        
        ' Calculate old price (Bước 3)
        initValue = Cells(rowNum, FindColumnByHeader(ActiveSheet, "INIT_VALUE")).Value
        stockQty = Cells(rowNum, FindColumnByHeader(ActiveSheet, "AB")).Value ' Assuming AB is the stock quantity column
        
        .Cells(.Rows.Count, 1).End(xlUp).Offset(1, 0).Value = collateralCode
        .Cells(.Rows.Count, 1).End(xlUp).Offset(0, 1).Value = initValue / stockQty
        
        ' Get stock code from CL31 (Bước 4)
        .Cells(.Rows.Count, 1).End(xlUp).Offset(0, 2).Value = GetStockCodeFromCL31(collateralCode, cl31Wb)
        
        ' Get stock quantity from CL31 (Bước 5)
        .Cells(.Rows.Count, 1).End(xlUp).Offset(0, 3).Value = GetStockQuantityFromCL31(collateralCode, cl31Wb)
        
        ' Get loan percentage from CL31 (Bước 6)
        .Cells(.Rows.Count, 1).End(xlUp).Offset(0, 4).Value = GetLoanPercentageFromCL31(collateralCode, cl31Wb)
        
        ' Get loan balance from CL32 (Bước 7)
        .Cells(.Rows.Count, 1).End(xlUp).Offset(0, 5).Value = CalculateLoanBalance(collateralCode, cl32Wb)
    End With
End Sub

Private Function FindColumnByHeader(ws As Worksheet, headerName As String) As Long
    Dim lastCol As Long
    Dim i As Long
    
    lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column
    
    For i = 1 To lastCol
        If ws.Cells(1, i).Value = headerName Then
            FindColumnByHeader = i
            Exit Function
        End If
    Next i
    
    FindColumnByHeader = 0
End Function

Private Sub CalculateMetrics(resultSheet As Worksheet)
    Dim lastRow As Long
    Dim i As Long
    
    With resultSheet
        lastRow = .Cells(.Rows.Count, 1).End(xlUp).Row
        
        For i = 2 To lastRow
            ' Calculate current asset value (Bước 8)
            .Cells(i, 7).Formula = "=D" & i & "*" & GetCurrentStockPrice(.Cells(i, 3).Value)
            
            ' Calculate current LTV (Bước 9)
            .Cells(i, 8).Formula = "=F" & i & "/G" & i
            
            ' Calculate LTV difference (Bước 10)
            .Cells(i, 9).Formula = "=E" & i & "-H" & i
        Next i
    End With
End Sub

Private Sub FilterNegativeLTV(resultSheet As Worksheet)
    With resultSheet
        .Range("A1:I" & .Cells(.Rows.Count, 1).End(xlUp).Row).AutoFilter Field:=9, Criteria1:="<0"
    End With
End Sub

Private Function GetCurrentStockPrice(stockCode As String) As Double
    ' This function should be implemented to get current stock price from market data
    ' You might want to use web scraping or API calls here
    GetCurrentStockPrice = 0 ' Placeholder
End Function
Private Function GetStockCodeFromCL31(collateralCode As String, cl31Wb As Workbook) As String
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim foundRange As Range
    
    Set ws = cl31Wb.Sheets(1)
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    ' Tìm mã tài sản trong CL31
    Set foundRange = ws.Range("A2:A" & lastRow).Find(collateralCode, LookIn:=xlValues, LookAt:=xlWhole)
    
    If Not foundRange Is Nothing Then
        ' Lấy mã CK từ cột Mã CK (giả sử ở cột E)
        GetStockCodeFromCL31 = ws.Cells(foundRange.Row, "E").Value
    Else
        GetStockCodeFromCL31 = ""
    End If
End Function

Private Function GetStockQuantityFromCL31(collateralCode As String, cl31Wb As Workbook) As Double
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim foundRange As Range
    
    Set ws = cl31Wb.Sheets(1)
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    ' Tìm mã tài sản trong CL31
    Set foundRange = ws.Range("A2:A" & lastRow).Find(collateralCode, LookIn:=xlValues, LookAt:=xlWhole)
    
    If Not foundRange Is Nothing Then
        ' Lấy số lượng chứng khoán (giả sử ở cột F)
        GetStockQuantityFromCL31 = CDbl(ws.Cells(foundRange.Row, "F").Value)
    Else
        GetStockQuantityFromCL31 = 0
    End If
End Function

Private Function GetLoanPercentageFromCL31(collateralCode As String, cl31Wb As Workbook) As Double
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim foundRange As Range
    
    Set ws = cl31Wb.Sheets(1)
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    ' Tìm mã tài sản trong CL31
    Set foundRange = ws.Range("A2:A" & lastRow).Find(collateralCode, LookIn:=xlValues, LookAt:=xlWhole)
    
    If Not foundRange Is Nothing Then
        ' Lấy tỷ lệ % cho vay (giả sử ở cột G)
        GetLoanPercentageFromCL31 = CDbl(ws.Cells(foundRange.Row, "G").Value)
    Else
        GetLoanPercentageFromCL31 = 0
    End If
End Function

Private Function CalculateLoanBalance(collateralCode As String, cl32Wb As Workbook) As Double
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    Dim accountDict As Object
    Dim collateralDict As Object
    
    Set ws = cl32Wb.Sheets(1)
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    ' Sử dụng Dictionary để lưu trữ dữ liệu tạm thời
    Set accountDict = CreateObject("Scripting.Dictionary")
    Set collateralDict = CreateObject("Scripting.Dictionary")
    
    ' Bước 1: Tính tổng dư nợ và giá trị đảm bảo cho mỗi tài khoản
    For i = 2 To lastRow
        Dim accNum As String
        Dim outstandingLcy As Double
        Dim giaTriDamBao As Double
        
        accNum = ws.Cells(i, "A").Value ' Giả sử ACCOUNT_NUMBER ở cột A
        outstandingLcy = CDbl(ws.Cells(i, "B").Value) ' Giả sử OUTSTANDING_LCY ở cột B
        giaTriDamBao = CDbl(ws.Cells(i, "C").Value) ' Giả sử GIA_TRI_DAM_BAO_DINH_GIA ở cột C
        
        If Not accountDict.Exists(accNum) Then
            accountDict(accNum) = Array(outstandingLcy, giaTriDamBao)
        Else
            Dim currentValues As Variant
            currentValues = accountDict(accNum)
            accountDict(accNum) = Array(currentValues(0) + outstandingLcy, currentValues(1) + giaTriDamBao)
        End If
    Next i
    
    ' Bước 2: Tính dư nợ theo mã TSBD
    For i = 2 To lastRow
        Dim acc As String
        Dim tsbd As String
        Dim values As Variant
        
        acc = ws.Cells(i, "A").Value
        tsbd = ws.Cells(i, "D").Value ' Giả sử COLLATERAL_CODE ở cột D
        giaTriDamBao = CDbl(ws.Cells(i, "C").Value)
        
        values = accountDict(acc)
        
        If values(1) <> 0 Then
            Dim sumDunoMaTsbd As Double
            sumDunoMaTsbd = (values(0) / values(1)) * giaTriDamBao
            
            If Not collateralDict.Exists(tsbd) Then
                collateralDict(tsbd) = sumDunoMaTsbd
            Else
                collateralDict(tsbd) = collateralDict(tsbd) + sumDunoMaTsbd
            End If
        End If
    Next i
    
    ' Trả về kết quả cho mã TSBD được yêu cầu
    If collateralDict.Exists(collateralCode) Then
        CalculateLoanBalance = collateralDict(collateralCode)
    Else
        CalculateLoanBalance = 0
    End If
End Function

Private Function GetCurrentStockPrice(stockCode As String) As Double
    ' Function này cần được implement theo nguồn dữ liệu giá cổ phiếu thực tế
    ' Ví dụ: đọc từ file Excel chứa giá cổ phiếu
    Dim priceWb As Workbook
    Dim priceWs As Worksheet
    Dim lastRow As Long
    Dim foundRange As Range
    
    On Error Resume Next
    Set priceWb = Workbooks.Open("path_to_stock_prices.xlsx")
    Set priceWs = priceWb.Sheets(1)
    
    lastRow = priceWs.Cells(priceWs.Rows.Count, "A").End(xlUp).Row
    Set foundRange = priceWs.Range("A2:A" & lastRow).Find(stockCode, LookIn:=xlValues, LookAt:=xlWhole)
    
    If Not foundRange Is Nothing Then
        GetCurrentStockPrice = CDbl(priceWs.Cells(foundRange.Row, "B").Value) ' Giả sử giá ở cột B
    Else
        GetCurrentStockPrice = 0
    End If
    
    priceWb.Close SaveChanges:=False
    On Error GoTo 0
End Function

Private Sub ErrorHandler()
    ' Xử lý lỗi chung
    MsgBox "An error occurred: " & Err.Description, vbCritical
    On Error Resume Next
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    On Error GoTo 0
End Sub

